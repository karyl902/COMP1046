<diagram program="umletino" version="15.1"><zoom_level>9</zoom_level><element><id>UMLClass</id><coordinates><x>82</x><y>36</y><w>279</w><h>216</h></coordinates><panel_attributes>Grader

--
- student_graders: dict 
- assignment_classes: dict
--
+ register(assignment_class: class): uuid  
+ start_assignment(student: str, id: uuid)  
+ check_assignment(student: str, code: str): bool  
+ get_lesson(student: str): str  
+ assignment_summary(student: str): str  
--
--Manage assignment registration 
and student assignment grading process
--Tracking student assignment submission records 
and grading results</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>550</x><y>405</y><w>351</w><h>144</h></coordinates><panel_attributes>Assignment
--
# student: str 
--
+ lesson(student: str): str 
+ check(code: str): bool  
--
--Defines an abstract specification for the job class, forcing 
subclasses to implement the course content and code review logic
--Provides a uniform interface for specific job classes 
(such as Statistics, IntroToPython)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>55</x><y>387</y><w>351</w><h>180</h></coordinates><panel_attributes>AssignmentGrader
--
- assignment: Assignment       
- attempts: int          
- correct_attempts: int  
--
+ __init__(student: str, AssignmentClass: class)  
+ check(code: str): bool  
+ lesson(): str  
--
--Encapsulate the grading logic of individual student assignments 
and manage submission records
-- Record the number of students' homework submission, 
and count the correct submission results</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>586</x><y>180</y><w>270</w><h>117</h></coordinates><panel_attributes>IntroToPython
--
+ lesson(): str         
+ check(code: str): bool
--
-- Provides a description of the content of 
the introductory Python course
-- Check the correctness of basic Python tasks
 (such as variable definitions and syntax formatting)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>559</x><y>648</y><w>342</w><h>135</h></coordinates><panel_attributes>Statistics
--
+ lesson(): str            
+ check(code: str): bool 
--
-- To realize the output of course content 
of statistics subjects
-- Performs logical checks on the code of the statistics-related job 
(e.g. whether the calculation logic is correct)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>712</x><y>540</y><w>63</w><h>126</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
inherit</panel_attributes><additional_attributes>10;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>703</x><y>288</y><w>63</w><h>135</h></coordinates><panel_attributes>lt=&lt;&lt;.
realize</panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>Relation</id><coordinates><x>397</x><y>459</y><w>171</w><h>45</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
relevance</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>208</x><y>243</y><w>72</w><h>162</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=*
m2=1
assembly</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element></diagram>